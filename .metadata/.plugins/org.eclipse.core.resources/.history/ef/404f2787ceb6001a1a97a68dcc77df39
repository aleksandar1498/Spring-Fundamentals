package com.enjoyit.utils;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.modelmapper.spi.MappingContext;

import com.enjoyit.domain.dto.UserDTO;
import com.enjoyit.persistence.EventUser;

public class EventUserListConverter extends ListConverter<EventUser, UserDTO> {

    @Override
    public List<UserDTO> convert(final MappingContext<List<EventUser>, List<UserDTO>> context) {
        System.out.println(context.getSource());
        if (context.getSource() != null) {
            context.getSource().stream().forEach(x -> {
                System.out.println(x.getUser());
                System.out.println(ObjectMapper.map(x, UserDTO.class));
                System.out.println(x.getUser().getUsername());
            });
        }
        if (context.getSource() == null || context.getDestination() == null) {
            return new ArrayList<UserDTO>();
        }
        return (List<UserDTO>) ObjectMapper.mapAll(context.getSource().stream().map(e -> {
            return new UserDTO(e.getUser().getId(), e.getUser().getUsername());
        }).collect(Collectors.toList()), context.getDestination().getClass());
    }

}
